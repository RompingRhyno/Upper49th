@using Customer.Membership.Models
@model MembershipWizardModel

@{
    Layout = "_Layout";
    var planModel = Model as PlanSelectionModel;
    var billingModel = Model as BillingAddressModel;
    var paymentModel = Model as PaymentMethodSelectionModel;
    var paymentProcessModel = Model as PaymentProcessModel;
}

<div class="membership-signup-container mb-5">
    <h2 class="text-center mb-4">Sign Up for a Membership</h2>

    <div class="progress mb-4">
        <div class="progress-bar" role="progressbar" style="width: @(Model.CurrentStep * 25.00)%"
            aria-valuenow="@Model.CurrentStep" aria-valuemin="1" aria-valuemax="4">
            Step @Model.CurrentStep of 4
        </div>
    </div>

    <form method="post" asp-action="SignUp" class="membership-form" id="signupForm">
        @Html.AntiForgeryToken()
        <input type="hidden" name="CurrentStep" value="@Model.CurrentStep" />

        @if (planModel != null)
        {
            @await Html.PartialAsync("~/Views/Membership/Partials/_PlanSelection.cshtml", planModel)
        }
        else if (billingModel != null)
        {
            <input type="hidden" name="SelectedPlan" value="@billingModel.SelectedPlan" />
            @await Html.PartialAsync("~/Views/Membership/Partials/_BillingAddress.cshtml", billingModel)
        }
        else if (paymentModel != null)
        {
            <input type="hidden" name="SelectedPlan" value="@paymentModel.SelectedPlan" />
            @await Html.PartialAsync("~/Views/Membership/Partials/_PaymentMethod.cshtml", paymentModel)
        }
        else if (paymentProcessModel != null)
        {
            <input type="hidden" name="SelectedPlan" value="@paymentProcessModel.SelectedPlan" />

            @if (!string.IsNullOrEmpty(paymentProcessModel.RedirectUrl))
            {
                @await Html.PartialAsync("~/Views/Membership/Partials/_PaymentProcess_Redirect.cshtml", paymentProcessModel)
            }
            else
            {
                @await Html.PartialAsync("~/Views/Membership/Partials/_PaymentProcess_Form.cshtml", paymentProcessModel)
            }
        }

        <div class="form-navigation mt-4">
            @if (Model.CurrentStep > 1)
            {
                <button type="submit" name="navigation" value="back" class="btn btn-secondary">Back</button>
            }
            <button type="submit" name="navigation" value="next" class="btn btn-primary">
                @(Model.CurrentStep == 1 ? "Continue to Billing" :
                                Model.CurrentStep == 2 ? "Continue to Payment" : "Complete Sign Up")
            </button>
        </div>
    </form>
</div>

@section Styles {
    <link rel="stylesheet" href="~/plugins/Customer.Membership/css/membership.css" />
}


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Update to work with radio buttons
            document.querySelectorAll('.membership-plan-card').forEach(card => {
                card.addEventListener('click', function (event) {
                    // Prevent default if needed
                    event.preventDefault();

                    // Remove selected class from all cards
                    document.querySelectorAll('.membership-plan-card').forEach(c => {
                        c.classList.remove('selected');
                    });

                    // Add selected class to clicked card
                    this.classList.add('selected');

                    const radio = this.querySelector('input[type="radio"]');
                    if (radio) {
                        radio.checked = true;
                        console.log('Selected plan:', radio.value);
                    }
                });

                const radio = card.querySelector('input[type="radio"]');
                if (radio && radio.checked) {
                    card.classList.add('selected');
                }
            });
        });

    </script>
}